import net.masterthought.cucumber.ReportBuilder
import net.masterthought.cucumber.Configuration

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath "net.masterthought:cucumber-reporting:5.3.0"
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.13.0"
	}
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
	id 'idea'
    //id "io.freefair.lombok" version "5.2.1"
}
apply plugin: 'docker-compose'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

ext {
	cucumber = '6.6.0'
	selenium = '4.0.0-alpha-6'
	hamcrest = '2.2'
	spring = '2.3.2.RELEASE'
	lombok = '1.18.12'
}
 
dependencies {
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: selenium
	testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-api', version:  selenium	
   	//implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.2.0'
	testImplementation group: 'io.cucumber', name: 'cucumber-java', version: cucumber
	testImplementation group: 'io.cucumber', name: 'cucumber-testng', version: cucumber
	testImplementation "org.hamcrest:hamcrest-library:$hamcrest"
	testImplementation "io.cucumber:cucumber-spring:$cucumber"
	testImplementation "org.springframework.boot:spring-boot-starter-web:$spring"
	testImplementation "org.springframework.boot:spring-boot-starter-test:$spring"
	

	testCompileOnly "org.projectlombok:lombok:$lombok"
	testAnnotationProcessor "org.projectlombok:lombok:$lombok"

	//compile group: 'net.masterthought', name: 'cucumber-reporting', version: '5.3.1'
	
   	
	
	//testImplementation group: 'org.testng', name: 'testng', version: '7.3.0'
    
}



test {

	useTestNG()
	scanForTestClasses = false
	testLogging.showStandardStreams = true
	systemProperties(System.properties)
	/*//for testng
	useTestNG(){
	suites  'testng.xml' //testngSuite //'testng.xml' pass -PtestngSuite=testng.xml
	
	//if you want testng reports
	useDefaultListeners = true 
	outputDirectory = file("$projectDir/testngOutput")
	}
	//Gradle Report
	reports.html.setDestination(file("$projectDir/GradleReport"))
	ignoreFailures = true
	*/
}



configurations {
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = ['--plugin', 'pretty', '--glue', 'demo/spring/selenium/stepdefinitions', 'src/test/resources/features']
		}

	}
}

def generateReport() {
	File reportOutputDirectory = new File("build/test-report")
	reportOutputDirectory.deleteDir()

	def jsonReports = fileTree(dir: "build/test-results").include '**/*.json'.toString()
	List<String> jsonReportFiles = new ArrayList<String>()
	jsonReports.each { File file ->
		jsonReportFiles.add("build/test-results/${file.name}".toString())
	}

	String projectName = project.name
	Configuration configuration = new Configuration(reportOutputDirectory, projectName)
	configuration.addClassifications("Version", project.version);

	ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
	reportBuilder.generateReports()

	println("\nReport: file://" + reportOutputDirectory.getCanonicalPath() + "/cucumber-html-reports/overview-features.html")
}

task generateReport() {
	doLast {
		generateReport()
	}
}


test.finalizedBy generateReport //is saying to Gradle to execute the report task after the test execution.

dockerCompose.isRequiredBy test

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
	scale = [firefox: 2, chrome: 2]
}